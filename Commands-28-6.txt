/*left outer join, right outer join, full outer join
Q. Employees working in which department as well as Employees who r not working in any department

matching rows from both the tables as well as non matching rows from left table.
at right side null gets displayed for nonmatching records

employee left outer join department*/


select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee left outer join department on dept_code=d_code;

select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee left  join department on dept_code=d_code;

/*Q. Employees working in which department as well as Departments where no any employee working

at left side null gets displayed for nonmatching records
employee right join  department*/

select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee right outer join department on dept_code=d_code;


select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee right  join department on dept_code=d_code;

/*
Q. Employees working in which department, Employees not working in any department, Departments where no employee working
matching, non matching from both tables*/

select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee full outer  join department on dept_code=d_code;


select employee_id, first_name, dept_code, d_code, d_name, d_budget
from employee full  join department on dept_code=d_code;


/*natural join: naturally joins the table with common  column: pk colname and fk colname should be same

it will matching rows only same as inner join*/
with Inner Join:

select employee_id, first_name, e.d_code , d.d_code , d_name, d_budget
from employee1 e join department1 d on e.d_code=d.d_code;

with natural join : Note: qualifier not allowed for common column

select e.employee_id, first_name, d_code  , d_name, d_budget
from employee1 e natural join department1 




drop table toys;

create table toys(toy_code NUMBER(6) primary key, toy_name VARCHAR2(50), toy_price NUMBER(8,3));

insert into toys values (3333,'Teddy Bear', 450);
insert into toys values (2222,'Ball', 100);
insert into toys values (1111,'Toy Train', 550);

create table colors(color_code varchar(50) primary key, color_name varchar(50));

insert into colors values ('#0000FF', 'blue');
insert into colors values ('#FF0000', 'red');
insert into colors values ('#00FF00', 'green');

Q.  3 rows, 3 rows  ==>  9 rows
all possible combinations of rows from left table with rows from right table
Cartetian Product, Cross Join
Pk and Fk relation no needed, not used

select * from toys cross join colors

select employee_id, dept_code, d_code, d_name
from employee cross join department





